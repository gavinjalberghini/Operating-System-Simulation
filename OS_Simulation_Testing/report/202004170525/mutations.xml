<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>generateAndSetLogicalMemory</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>52</block><killingTest>test.OS.PCBTest.testGenerateAndSetLogicalMemory(test.OS.PCBTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>generateAndSetLogicalMemory</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>52</block><killingTest>test.OS.PCBTest.testGenerateAndSetLogicalMemory(test.OS.PCBTest)</killingTest><description>removed call to OS/PCB::setBaseRegister</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>generateAndSetLogicalMemory</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>52</block><killingTest>test.OS.PCBTest.testGenerateAndSetLogicalMemory(test.OS.PCBTest)</killingTest><description>removed call to OS/PCB::setLimitRegister</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>generateAndSetLogicalMemory</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>52</block><killingTest>test.OS.PCBTest.testGenerateAndSetLogicalMemory(test.OS.PCBTest)</killingTest><description>removed call to OS/PCB::setBaseRegBuilder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>generateAndSetLogicalMemory</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>52</block><killingTest>test.OS.PCBTest.testGenerateAndSetLogicalMemory(test.OS.PCBTest)</killingTest><description>removed call to OS/PCB::setPageCtr</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>generateAndSetPid</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>51</block><killingTest>test.OS.PCBTest.testGenerateAndSetPid(test.OS.PCBTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>generateAndSetPid</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>51</block><killingTest>test.OS.PCBTest.testGenerateAndSetPid(test.OS.PCBTest)</killingTest><description>removed call to OS/PCB::setPid</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getBaseRegBuilder</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>1</block><killingTest>test.OS.PCBTest.testGetBaseRegBuilder(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getBaseRegister</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>15</block><killingTest>test.OS.PCBTest.testGetBaseRegister(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getInstructions</mutatedMethod><methodDescription>()Ljava/util/ArrayList;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>13</block><killingTest>test.OS.PCBTest.testGetInstructions(test.OS.PCBTest)</killingTest><description>mutated return of Object value for OS/PCB::getInstructions to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getJobType</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>11</block><killingTest>test.OS.PCBTest.testGetJobType(test.OS.PCBTest)</killingTest><description>mutated return of Object value for OS/PCB::getJobType to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getLastCpuIter</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>23</block><killingTest>test.OS.PCBTest.testGetLastCpuIter(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getLimitRegister</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>17</block><killingTest>test.OS.PCBTest.testGetLimitRegister(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getMailData</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>39</block><killingTest>test.OS.PCBTest.testGetMailData(test.OS.PCBTest)</killingTest><description>mutated return of Object value for OS/PCB::getMailData to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getMailKey</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>37</block><killingTest>test.OS