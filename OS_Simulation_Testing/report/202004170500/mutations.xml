<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>generateAndSetLogicalMemory</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>52</block><killingTest>test.OS.PCBTest.testGenerateAndSetLogicalMemory(test.OS.PCBTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>generateAndSetLogicalMemory</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>52</block><killingTest>test.OS.PCBTest.testGenerateAndSetLogicalMemory(test.OS.PCBTest)</killingTest><description>removed call to OS/PCB::setBaseRegister</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>generateAndSetLogicalMemory</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>52</block><killingTest>test.OS.PCBTest.testGenerateAndSetLogicalMemory(test.OS.PCBTest)</killingTest><description>removed call to OS/PCB::setLimitRegister</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>generateAndSetLogicalMemory</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>52</block><killingTest>test.OS.PCBTest.testGenerateAndSetLogicalMemory(test.OS.PCBTest)</killingTest><description>removed call to OS/PCB::setBaseRegBuilder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>generateAndSetLogicalMemory</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>52</block><killingTest>test.OS.PCBTest.testGenerateAndSetLogicalMemory(test.OS.PCBTest)</killingTest><description>removed call to OS/PCB::setPageCtr</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>generateAndSetPid</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>51</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>generateAndSetPid</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>51</block><killingTest>test.OS.PCBTest.testGenerateAndSetPid(test.OS.PCBTest)</killingTest><description>removed call to OS/PCB::setPid</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getBaseRegBuilder</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>1</block><killingTest>test.OS.PCBTest.testSetBaseRegBuilder(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getBaseRegister</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>15</block><killingTest>test.OS.PCBTest.testGetBaseRegister(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getInstructions</mutatedMethod><methodDescription>()Ljava/util/ArrayList;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>13</block><killingTest>test.OS.PCBTest.testGetInstructions(test.OS.PCBTest)</killingTest><description>mutated return of Object value for OS/PCB::getInstructions to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getJobType</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>11</block><killingTest>test.OS.PCBTest.testGetJobType(test.OS.PCBTest)</killingTest><description>mutated return of Object value for OS/PCB::getJobType to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getLastCpuIter</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>23</block><killingTest>test.OS.PCBTest.testGetLastCpuIter(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getLimitRegister</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>17</block><killingTest>test.OS.PCBTest.testGetLimitRegister(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getMailData</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>39</block><killingTest>test.OS.PCBTest.testGetMailData(test.OS.PCBTest)</killingTest><description>mutated return of Object value for OS/PCB::getMailData to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getMailKey</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>37</block><killingTest>test.OS.PCBTest.testGetMailKey(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getMemoryReq</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>31</block><killingTest>test.OS.PCBTest.testGetMemoryReq(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getNextLoadAmnt</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>27</block><killingTest>test.OS.PCBTest.testGetNextLoadAmnt(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getNumOfPages</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>21</block><killingTest>test.OS.PCBTest.testGetNumOfPages(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>29</block><killingTest>test.OS.PCBTest.testGetOffset(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getPageCtr</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>20</block><killingTest>test.OS.PCBTest.testGetPageCtr(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getPageLoadIncr</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>25</block><killingTest>test.OS.PCBTest.testGetPageLoadIncr(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getPid</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTest>test.OS.ProcessTest.testCommunicate(test.OS.ProcessTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getPriority</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>9</block><killingTest>test.OS.PCBTest.testGetPriority(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getProcessState</mutatedMethod><methodDescription>()LOS/PCB$ProcessState;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>49</block><killingTest>test.OS.PCBTest.testGetProcessState(test.OS.PCBTest)</killingTest><description>mutated return of Object value for OS/PCB::getProcessState to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getProgramCounter</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTest>test.OS.PCBTest.testGetProgramCounter(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getResourceOneReq</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>33</block><killingTest>test.OS.PCBTest.testGetResourceOneReq(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getResourceTwoReq</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>35</block><killingTest>test.OS.PCBTest.testSetResourceTwoReq(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>getTotalCpuCyclesUsed</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>7</block><killingTest>test.OS.PCBTest.testSetTotalCpuCyclesUsed(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>hasMemory</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>43</block><killingTest>test.OS.PCBTest.testHasMemory(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>hasProcessResources</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>41</block><killingTest>test.OS.PCBTest.testHasProcessResources(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>isInRamOnly</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>45</block><killingTest>test.OS.PCBTest.testIsInRamOnly(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>isPageLoadNeeded</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>47</block><killingTest>test.OS.PCBTest.testIsPageLoadNeeded(test.OS.PCBTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>shiftToNextInstruction</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>53</block><killingTest>test.OS.PCBTest.testShiftToNextInstruction(test.OS.PCBTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>shiftToNextInstruction</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>53</block><killingTest>test.OS.PCBTest.testShiftToNextInstruction(test.OS.PCBTest)</killingTest><description>removed call to OS/PCB::setProgramCounter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PCB.java</sourceFile><mutatedClass>OS.PCB</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>54</block><killingTest>test.OS.PCBTest.testToString(test.OS.PCBTest)</killingTest><description>mutated return of Object value for OS/PCB::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ZI)V</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>0</block><killingTest>test.OS.MemoryTest.testGetFrames(test.OS.MemoryTest)</killingTest><description>removed call to OS/Memory::initializeMemory</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>allocateFrame</mutatedMethod><methodDescription>(I)LOS/Frame;</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>15</block><killingTest>test.OS.MemoryTest.testAllocateFrame(test.OS.MemoryTest)</killingTest><description>mutated return of Object value for OS/Memory::allocateFrame to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>allocateFrame</mutatedMethod><methodDescription>(I)LOS/Frame;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>15</block><killingTest>test.OS.MemoryTest.testAllocateFrame(test.OS.MemoryTest)</killingTest><description>removed call to OS/Frame::occupy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>allocateFrame</mutatedMethod><methodDescription>(I)LOS/Frame;</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>14</index><block>15</block><killingTest>test.OS.MemoryTest.testDeallocateFrame(test.OS.MemoryTest)</killingTest><description>removed call to OS/Memory::updateNumOfFreeFrames</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>deallocateFrame</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>17</block><killingTest>test.OS.MemoryTest.testDeallocateFrame(test.OS.MemoryTest)</killingTest><description>removed call to OS/Frame::free</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>deallocateFrame</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>17</block><killingTest>test.OS.MemoryTest.testDeallocateFrame(test.OS.MemoryTest)</killingTest><description>removed call to OS/Memory::updateNumOfFreeFrames</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>getFrames</mutatedMethod><methodDescription>()Ljava/util/HashMap;</methodDescription><lineNumber>28</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTest>test.OS.MemoryTest.testAddToFrames(test.OS.MemoryTest)</killingTest><description>mutated return of Object value for OS/Memory::getFrames to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>getFreeFrames</mutatedMethod><methodDescription>()Ljava/util/Stack;</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>8</block><killingTest>test.OS.MemoryTest.testAddToFrames(test.OS.MemoryTest)</killingTest><description>mutated return of Object value for OS/Memory::getFreeFrames to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>getNextFreeFrame</mutatedMethod><methodDescription>()LOS/Frame;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>14</block><killingTest>test.OS.MemoryTest.testAllocateFrame(test.OS.MemoryTest)</killingTest><description>mutated return of Object value for OS/Memory::getNextFreeFrame to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>getNumOfFreeFrames</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>6</block><killingTest>test.OS.MemoryTest.testDeallocateFrame(test.OS.MemoryTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>32</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTest>test.OS.MemoryTest.testGetSize(test.OS.MemoryTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>initializeMemory</mutatedMethod><methodDescription>(ZI)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>18</block><killingTest>test.OS.MemoryTest.testSetFreeFrames(test.OS.MemoryTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>initializeMemory</mutatedMethod><methodDescription>(ZI)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>43</index><block>20</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>initializeMemory</mutatedMethod><methodDescription>(ZI)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>18</block><killingTest>test.OS.MemoryTest.testGetFrames(test.OS.MemoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>initializeMemory</mutatedMethod><methodDescription>(ZI)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>19</block><killingTest>test.OS.MemoryTest.testInitializeMemory(test.OS.MemoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>initializeMemory</mutatedMethod><methodDescription>(ZI)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>20</block><killingTest>test.OS.MemoryTest.testInitializeMemory(test.OS.MemoryTest)</killingTest><description>removed call to OS/Frame::setVMFrame</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>initializeMemory</mutatedMethod><methodDescription>(ZI)V</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>20</block><killingTest>test.OS.MemoryTest.testGetFrames(test.OS.MemoryTest)</killingTest><description>removed call to OS/Memory::addToFrames</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>initializeMemory</mutatedMethod><methodDescription>(ZI)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>20</block><killingTest>test.OS.MemoryTest.testAllocateFrame(test.OS.MemoryTest)</killingTest><description>removed call to OS/Memory::addToFreeFrames</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>initializeMemory</mutatedMethod><methodDescription>(ZI)V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>49</index><block>21</block><killingTest>test.OS.MemoryTest.testGetNumOfFreeFrames(test.OS.MemoryTest)</killingTest><description>removed call to OS/Memory::updateNumOfFreeFrames</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>isFreeMemory</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTest>test.OS.MemoryTest.testIsFreeMemory(test.OS.MemoryTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>54</index><block>25</block><killingTest>test.OS.MemoryTest.testToString(test.OS.MemoryTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>23</block><killingTest>test.OS.MemoryTest.testToString(test.OS.MemoryTest)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>23</block><killingTest>test.OS.MemoryTest.testToString(test.OS.MemoryTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>62</index><block>26</block><killingTest>test.OS.MemoryTest.testToString(test.OS.MemoryTest)</killingTest><description>mutated return of Object value for OS/Memory::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Memory.java</sourceFile><mutatedClass>OS.Memory</mutatedClass><mutatedMethod>updateNumOfFreeFrames</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>16</block><killingTest>test.OS.MemoryTest.testDeallocateFrame(test.OS.MemoryTest)</killingTest><description>removed call to OS/Memory::setNumOfFreeFrames</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Process.java</sourceFile><mutatedClass>OS.Process</mutatedClass><mutatedMethod>addToPageTable</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>8</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Process.java</sourceFile><mutatedClass>OS.Process</mutatedClass><mutatedMethod>addToPageTable</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>8</block><killingTest/><description>removed call to OS/PCB::setPageCtr</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Process.java</sourceFile><mutatedClass>OS.Process</mutatedClass><mutatedMethod>buildPipe</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>9</block><killingTest>test.OS.ProcessTest.testCommunicate(test.OS.ProcessTest)</killingTest><description>removed call to OS/Process$Pipe::setConnectedProcPid</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Process.java</sourceFile><mutatedClass>OS.Process</mutatedClass><mutatedMethod>buildPipe</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>9</block><killingTest>test.OS.ProcessTest.testCommunicate(test.OS.ProcessTest)</killingTest><description>removed call to OS/Process$Pipe::setPipeKey</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Process.java</sourceFile><mutatedClass>OS.Process</mutatedClass><mutatedMethod>buildPipe</mutatedMethod><methodDescription>(III)V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>9</block><killingTest>test.OS.ProcessTest.testCommunicate(test.OS.ProcessTest)</killingTest><description>removed call to OS/Process$Pipe::setPipeLock</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Process.java</sourceFile><mutatedClass>OS.Process</mutatedClass><mutatedMethod>getPageTable</mutatedMethod><methodDescription>()Ljava/util/HashMap;</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>4</block><killingTest>test.OS.ProcessTest.testGetPageTable(test.OS.ProcessTest)</killingTest><description>mutated return of Object value for OS/Process::getPageTable to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Process.java</sourceFile><mutatedClass>OS.Process</mutatedClass><mutatedMethod>getPcb</mutatedMethod><methodDescription>()LOS/PCB;</methodDescription><lineNumber>21</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>test.OS.ProcessTest.testCommunicate(test.OS.ProcessTest)</killingTest><description>mutated return of Object value for OS/Process::getPcb to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Process.java</sourceFile><mutatedClass>OS.Process</mutatedClass><mutatedMethod>getPdt</mutatedMethod><methodDescription>()LOS/PDT;</methodDescription><lineNumber>25</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTest>test.OS.ProcessTest.testSetPdt(test.OS.ProcessTest)</killingTest><description>mutated return of Object value for OS/Process::getPdt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Process.java</sourceFile><mutatedClass>OS.Process</mutatedClass><mutatedMethod>getPipes</mutatedMethod><methodDescription>()Ljava/util/ArrayList;</methodDescription><lineNumber>29</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTest>test.OS.ProcessTest.testCommunicate(test.OS.ProcessTest)</killingTest><description>mutated return of Object value for OS/Process::getPipes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Process.java</sourceFile><mutatedClass>OS.Process</mutatedClass><mutatedMethod>getValidBits</mutatedMethod><methodDescription>()Ljava/util/HashMap;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTest>test.OS.ProcessTest.testGetValidBits(test.OS.ProcessTest)</killingTest><description>mutated return of Object value for OS/Process::getValidBits to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Process.java</sourceFile><mutatedClass>OS.Process</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>164</index><block>13</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Process.java</sourceFile><mutatedClass>OS.Process</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>225</index><block>17</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Process.java</sourceFile><mutatedClass>OS.Process</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>147</index><block>11</block><killingTest/><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Process.java</sourceFile><mutatedClass>OS.Process</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>208</index><block>15</block><killingTest/><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Process.java</sourceFile><mutatedClass>OS.Process</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>148</index><block>11</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Process.java</sourceFile><mutatedClass>OS.Process</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>209</index><block>15</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Process.java</sourceFile><mutatedClass>OS.Process</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>272</index><block>20</block><killingTest>test.OS.ProcessTest.testToString(test.OS.ProcessTest)</killingTest><description>mutated return of Object value for OS/Process::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Frame.java</sourceFile><mutatedClass>OS.Frame</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>19</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>0</block><killingTest>test.OS.FrameTest.testGetPhysicalAddress(test.OS.FrameTest)</killingTest><description>removed call to OS/Frame::generateAndSetPhysicalAddress</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Frame.java</sourceFile><mutatedClass>OS.Frame</mutatedClass><mutatedMethod>generateAndSetPhysicalAddress</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>14</block><killingTest>test.OS.FrameTest.testGenerateAndSetPhysicalAddress(test.OS.FrameTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Frame.java</sourceFile><mutatedClass>OS.Frame</mutatedClass><mutatedMethod>generateAndSetPhysicalAddress</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>14</block><killingTest>test.OS.FrameTest.testGenerateAndSetPhysicalAddress(test.OS.FrameTest)</killingTest><description>removed call to OS/Frame::setPhysicalAddress</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Frame.java</sourceFile><mutatedClass>OS.Frame</mutatedClass><mutatedMethod>generateAndSetPhysicalAddress</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>14</block><killingTest>test.OS.FrameTest.testGenerateAndSetPhysicalAddress(test.OS.FrameTest)</killingTest><description>removed call to OS/Frame::setAddressBuilder</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Frame.java</sourceFile><mutatedClass>OS.Frame</mutatedClass><mutatedMethod>getAddressBuilder</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>12</block><killingTest>test.OS.FrameTest.testSetAddressBuilder(test.OS.FrameTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frame.java</sourceFile><mutatedClass>OS.Frame</mutatedClass><mutatedMethod>getPhysicalAddress</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>27</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTest>test.OS.FrameTest.testGenerateAndSetPhysicalAddress(test.OS.FrameTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frame.java</sourceFile><mutatedClass>OS.Frame</mutatedClass><mutatedMethod>getProccessID</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>10</block><killingTest>test.OS.FrameTest.testOccupy(test.OS.FrameTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frame.java</sourceFile><mutatedClass>OS.Frame</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>31</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTest>test.OS.FrameTest.testGetSize(test.OS.FrameTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frame.java</sourceFile><mutatedClass>OS.Frame</mutatedClass><mutatedMethod>isFree</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTest>test.OS.FrameTest.testOccupy(test.OS.FrameTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frame.java</sourceFile><mutatedClass>OS.Frame</mutatedClass><mutatedMethod>isVMFrame</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>9</block><killingTest>test.OS.FrameTest.testSetVMFrame(test.OS.FrameTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frame.java</sourceFile><mutatedClass>OS.Frame</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>15</block><killingTest>test.OS.FrameTest.testToString(test.OS.FrameTest)</killingTest><description>mutated return of Object value for OS/Frame::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PDT.java</sourceFile><mutatedClass>OS.PDT</mutatedClass><mutatedMethod>getChildrenPids</mutatedMethod><methodDescription>()Ljava/util/ArrayList;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>8</block><killingTest>test.OS.PDTTest.testGetChildrenPids(test.OS.PDTTest)</killingTest><description>mutated return of Object value for OS/PDT::getChildrenPids to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PDT.java</sourceFile><mutatedClass>OS.PDT</mutatedClass><mutatedMethod>getParentPid</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTest>test.OS.PDTTest.testGetParentPid(test.OS.PDTTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PDT.java</sourceFile><mutatedClass>OS.PDT</mutatedClass><mutatedMethod>isChild</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>20</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>test.OS.PDTTest.testSetIsChild(test.OS.PDTTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PDT.java</sourceFile><mutatedClass>OS.PDT</mutatedClass><mutatedMethod>isParent</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>24</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTest>test.OS.PDTTest.testIsParent(test.OS.PDTTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
</mutations>
